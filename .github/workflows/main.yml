name: Go Multi-Platform Build
on: [push, pull_request]

jobs:
  build:
    name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: linux
            goarch: arm64
            suffix: ""
          - goos: darwin
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""
          - goos: windows
            goarch: amd64
            suffix: .exe
          - goos: windows
            goarch: arm64
            suffix: .exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # 根据项目需求调整版本

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0  # 禁用CGO确保纯静态编译
        run: |
          output_name="bin/${GOOS}-${GOARCH}/app${SUFFIX}"
          go build -v -trimpath -ldflags "-s -w" -o $output_name .

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/${{ matrix.goos }}-${{ matrix.goarch }}/*
